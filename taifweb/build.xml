<?xml version="1.0" encoding="UTF-8"?>

<!-- ##################################################### -->
<!-- #                                                   # -->
<!-- # build.xml file per compilazione e generazione     # -->
<!-- # del pacchetto per il rilascio dell'applicazione.  # -->
<!-- #                                                   # -->
<!-- # Per una lista completa dei tasks eseguibili usare # -->
<!-- # l'argomento di ant -projecthelp quando si         # -->
<!-- # richiama questo build.xml.                        # -->
<!-- ##################################################### -->

<project basedir="."
         default="default"
         name="taifweb"
         xmlns:ivy="antlib:fr.jayasoft.ivy.ant" >

  <description>Build file per il progetto: [taifweb]</description>

  <!-- -->
  <property file="buildfiles/build.properties" />
  <property file="buildfiles/${target}.properties" />

  <!-- -->
  <path id="library.ref">
    <fileset dir="${lib}">
      <include name="**/*.jar" />
      <include name="**/*.zip" />
    </fileset>
  </path>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # Target: init                                              # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="init" description="Inizializza lo script Ant.">
    <tstamp />
    <condition property="target" value="dev">
      <equals arg1="${target}" arg2="$${target}" />
    </condition>
    <mkdir dir="${build}/classes" />
    <mkdir dir="${temp}/${target}/${earLib}" />
    <mkdir dir="${temp}/static-resources" />
    <mkdir dir="${build}/archives/${target}" />
    <mkdir dir="${dist}/${target}" />
    <mkdir dir="${build}/javadoc" />
    <mkdir dir="${build}/jsp" />
    <mkdir dir="${build}/cache" />
  </target>

  <target name="show-vars" depends="init"
          description="Visualizza tutte le variabili impostate nei file di properties e/o da linea di comando">
          <echo message="*****************************************"/>
          <echo message="********  ${componente} environment  *******" />
          <echo message="*****************************************"/>
          <echo message="Runtime :"/>
          <echo message="JAVA_HOME = ${JAVA_HOME}"/>
          <echo message=""/>
          <echo message="Target:"/>
          <echo message="TARGET = ${target}"/>
          <echo message=""/>
          <echo message="Application :"/>
          <echo message="VERSION = ${version}"/>
          <echo message=""/>
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # Target: default                                           # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="default"
          description="Eseguire il build per l'environment
                       specificato a linea di comando con
                       -Dtarget=${target} o per tutti gli
                       environment (se non specificato).">

    <condition property="first-call" value="distribution">
      <not>
        <equals arg1="${target}" arg2="$${target}" />
      </not>
    </condition>

    <condition property="first-call" value="all-targets">
      <equals arg1="${target}" arg2="$${target}" />
    </condition>

    <echo message="target: ${server}" />
    <echo message="target: ${target}" />
    <echo message="first-call: ${first-call}" />

    <antcall target="clean-all" />
    <antcall target="${first-call}" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # Target: environment-recreate                              # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="environment-recreate">
    <mkdir dir="build/temp/conf" />
    <copy todir="build/temp/conf" overwrite="true">
      <fileset dir="${conf}" />
    </copy>
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # Target: compile-all                                       # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="compile-all" depends="init,load-dependencies"
          description="Compila tutti i sorgenti.">

    <echo message="===> Target: ${target}" />
    <javac srcdir="${src}/java" destdir="${build}/classes"
           optimize="on" deprecation="on" compiler="modern"
           debug="on" debuglevel="lines,vars,source"
           
    >
      <classpath refid="library.ref" />
    </javac>
    <copy todir="${build}/classes">
      <fileset dir="${src}/java" excludes="**/*.java*,**/*.jbx*" />
    </copy>
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # Target: about                                             # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="about" description="Visualizza l'elenco dei target
                                    pubblici dello script.">

    <loadproperties srcfile="buildfiles/build.properties" />
    <loadfile property="about" srcfile="buildfiles/about.txt" />
    <echo message="${about}" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # Target: about-custom                                      # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="about-custom"
          description="Visualizza l'elenco di tutti i target,
                       pubblici e privati
                       (equivalente a 'ant -projecthelp')" >

    <loadproperties srcfile="buildfiles/build.properties" />
    <loadfile property="about-custom" srcfile="buildfiles/about-custom.txt" />
    <echo message="${about-custom}" />
    <java classname="org.apache.tools.ant.Main">
      <arg value="-projecthelp" />
    </java>
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [DISTRIB]: all-targets                                    # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="all-targets"
          description="Esegue il build per le varie distribuzioni in sequenza.">
    <!--PROTECTED REGION ID(R-1748880042) ENABLED START-->
		<!-- Inserire le varie distribuzioni di cui si intende eseguire il build. -->
		<!--ant antfile="buildfiles/build-test.xml"/-->
		<antcall target="distribution" />
		<!--PROTECTED REGION END-->
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [DISTRIB]: distribution                                   # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="distribution" depends="package-all"
          description="Costruisce il tar per la distribuzione." >
    <echo message="====== Creating distribution for ${target} ..."/>
    <echo message="====== Basedir: ${build}/archives/${target} ..."/>
    <tar tarfile="${dist}/${target}/${dist-file-name}.tar"
         basedir="${build}/archives/${target}"
         includes="*.ear,*.xml" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [IVY]: resolve-dependencies                               # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="resolve-dependencies"
          description="carica le librerie dal repository remoto">
    <ivy:configure file="${basedir}/buildfiles/ivyconf.xml" />
    <ivy:resolve file="${basedir}/buildfiles/ivy.xml" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [IVY]: internal target: load-dependencies                 # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="load-dependencies"
          depends="resolve-dependencies"
          description="Risolve le dipendenze esterne.">
    <ivy:retrieve pattern="${basedir}/lib/[artifact].[type]" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # Target: environment-config                                # -->
  <!-- #         Gestire qui i  replace delle variabile d'ambiente # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="environment-config"
          description="Predispone le configurazioni dipendenti dall'ambiente." >
    <!-- Gestione replace delle variabile d'ambiente create dal generatore -->
    <condition property="remincl.cache.time" value="${remincl.cache.time.default}">
      <equals arg1="${remincl.cache.time}" arg2="$${remincl.cache.time}" />
    </condition>
    <replace file="${build}/temp/conf/web/${webapp}/WEB-INF/web.xml" token="@@@remincl.cache.time@@@" value="${remincl.cache.time}"/>
    <replace file="${build}/temp/conf/web/${webapp}/WEB-INF/web.xml" token="@@@remincl.resource.provider@@@" value="${remincl.resource.provider}"/>
    <replace file="${build}/temp/conf/web/${webapp}/WEB-INF/web.xml" token="@@@portal.home@@@"  value="${portal.home}"/>
		
		
	<!-- replace variabili di environment per shibboleth -->
	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/web.xml" 
		token="@LOGOUT_URL@"  
		value="${shibboleth.logout.url}"/>
	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/struts-global.xml" 
		token="@LOGOUT_URL@"  
		value="${shibboleth.logout.url}"/>	
		
	<!-- replace variabili di environment per iride2 -->
	<replace file="${build}/temp//conf/ejb/business/taifweb/META-INF/iride2_pep_defPD_ejb.xml" 
		token="@IRIDE_PROVIDER_URL@"  
		value="${iride2.pep.provider.url}"/>
	<replace file="${build}/temp//conf/ejb/business/taifweb/META-INF/iride2_pep_defPD_ws.xml" 
		token="@IRIDE_WSFAD_URL@"  
		value="${iride2.pep.wsfad.url}"/>
	<replace file="${build}/temp//conf/web/taifweb/WEB-INF/applicationContext.xml" 
		token="@IRIDE_PD_PROTOCOL@"  
		value="${iride2.pep.pd.protocol}"/>	
	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/web.xml" 
		token="@LOCAL_LOGOUT_URL@"  
		value="${local.logout.url}"/>
	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/struts-global.xml" 
		token="@LOCAL_LOGOUT_URL@"  
		value="${local.logout.url}"/>
	
	<!-- gestione [devmode] (modalita' di sviluppo) -->
	<if>
		<equals arg1="${devmode}" arg2="true" />
		<then><!-- se 'devmode' presente e valorizzato a true -->
			<echo message="modalita' di sviluppo abilitata" />
			<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/web.xml" 
				token="@DEVMODE@"  
				value="true"/>
		</then>
		<else><!-- se 'devmode' assente o valorizzato a false -->
			<echo message="modalita' di sviluppo NON abilitata" />
			<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/web.xml" 
				token="@DEVMODE@"  
				value="false"/>
		</else>
	</if>
	
	<!-- gestone cookie path su JBoss -->
	<if>
 		<equals arg1="${jboss.sessioncookievalve}" arg2="true" />
 	<then>
	    <replace dir="${build}/temp/conf/web" token="@@@@JBOSS_SESSIONCOOKIEVALVE@@@@"  value="&lt;Valve className=&quot;it.csi.util.sessioncookievalve.ConfigureSessionCookieValve&quot; cookiePath=&quot;/taifweb/&quot; /&gt;">
		    <include name="**/context.xml"/>
  		</replace>	
  	</then>	
  	<else>
	    <replace dir="${build}/temp/conf/web" token="@@@@JBOSS_SESSIONCOOKIEVALVE@@@@"  value="">
		    <include name="**/context.xml"/>
  		</replace>	
  	</else>
  	</if>	
    <!--PROTECTED REGION ID(R816510908) ENABLED START-->
    <!-- gestire qui i  replace delle proprie variabili d'ambiente -->
  	<!-- DB -->
  	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/dao-beans.xml" token="@JNDI.NAME@" value="${jndi.name}" />
  	<replace file="${build}/temp/conf/taifwebsrv-taifweb-ds.xml" token="@@JNDI.NAME.DS@@" value="${jndi.name.ds}" />
  	<replace file="${build}/temp/conf/taifwebsrv-taifweb-ds.xml" token="@@USER.DB@@" value="${user.db}" />
  	<replace file="${build}/temp/conf/taifwebsrv-taifweb-ds.xml" token="@@CONNECTION.URL@@" value="${connection.url}" />
  	<replace file="${build}/temp/conf/taifwebsrv-taifweb-ds.xml" token="@@PASSWORD.DB@@" value="${pass.db}" />
  	<copy todir="${build}/archives/${target}">
  	            <fileset file="${build}/temp/conf/taifwebsrv-taifweb-ds.xml" />
  	        </copy>
  	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/applicationContext.xml" 
  		token="@taif.token.url@" 
  		value="${taif.token.url}" />
  	
  	<!-- LIMITI AMMINISTRATIVI -->
  	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/applicationContext.xml" 
  		token="@@@@limamm.base.url@@@@"
  		value="${limamm.base.url}"/>
  	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/applicationContext.xml" 
  		token="@limamm.ente.api.url@" 
  		value="${limamm.ente.api.url}" />
  	<!-- AAEP -->
  	  	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/applicationContext.xml" 
  	  		token="@aaep.api.url@" 
  	  		value="${aaep.api.url}" />
  	
  	<!-- HTTP CLIENT -->
  	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/applicationContext.xml"
  	    token="@@@@http.proxy.host@@@@"
  	    value="${http.proxy.host}"/>

  	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/applicationContext.xml"
  	    token="@@@@http.proxy.port@@@@"
  	     value="${http.proxy.port}"/>

  	<!-- INDEX -->
  	  	  	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/applicationContext.xml" 
  	  	  		token="@index.ws.url@" 
  	  	  		value="${index.ws.url}" />
  	<!-- ACTA -->
  	  	  	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/applicationContext.xml" 
  	  	  	  			token="@acta.host@" 
  	  	  	  			value="${acta.host}" />
  	  	  	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/applicationContext.xml" 
  	  	  	  	  		token="@acta.port@" 
  	  	  	  	  		value="${acta.port}" />
  	  	  	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/applicationContext.xml" 
  	  	  	  	  		token="@acta.context@" 
  	  	  	  	  		value="${acta.context}" />
  	  	  	
  	  	  	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/applicationContext.xml" 
  	  	  	  	  		token="@acta.backoffice.api.url@" 
  	  	  	  	  		value="${acta.backoffice.api.url}" />
  	  	  	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/applicationContext.xml" 
  	  	  	  	  	  		token="@acta.management.api.url@" 
  	  	  	  	  	  		value="${acta.management.api.url}" />
  	  	  	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/applicationContext.xml" 
  	  	  		  	  	  		token="@acta.multifiling.api.url@" 
  	  	  		  	  	  		value="${acta.multifiling.api.url}" />
  	  	  	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/applicationContext.xml" 
  	  	  	  	  	  		token="@acta.navigation.api.url@" 
  	  	  	  	  	  		value="${acta.navigation.api.url}" />
  	  	  	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/applicationContext.xml" 
  	  	  			  	  	  		token="@acta.object.api.url@" 
  	  	  			  	  	  		value="${acta.object.api.url}" />
  	  	  	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/applicationContext.xml" 
  	  	  			  	  	  		token="@acta.officialbook.api.url@" 
  	  	  			  	  	  		value="${acta.officialbook.api.url}" />
  	  	  	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/applicationContext.xml" 
  	  	  			  	  	  		token="@acta.relationships.api.url@" 
  	  	  			  	  	  		value="${acta.relationships.api.url}" />
  	  	  	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/applicationContext.xml" 
  	  	  			  	  	  		token="@acta.document.api.url@" 
  	  	  			  	  	  		value="${acta.document.api.url}" />
  	  	  	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/applicationContext.xml" 
  	  	  			  	  	  		token="@acta.repository.api.url@" 
  	  	  			  	  	  		value="${acta.repository.api.url}" />
  	  	  	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/applicationContext.xml" 
  	  	  			  	  	  		token="@acta.sms.api.url@" 
  	  	  			  	  	  		value="${acta.sms.api.url}" />
  	  	  	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/applicationContext.xml" 
  	  	  			  	  	  		token="@acta.subjectregistry.api.url@" 
  	  	  			  	  	  		value="${acta.subjectregistry.api.url}" /> 
  	
  	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/applicationContext.xml" 
  	  	  		token="@primpaforserv.ws.url@" 
  	  	  		value="${primpaforserv.ws.url}" />
  	
    <!--PROTECTED REGION END-->
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [PKG]: package-all                                        # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="package-all"
          description="esegue il packaging di ogni componente del prodotto">
    <antcall target="package-ear" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [PKG]: package-ear                                        # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="package-ear"
          depends="environment-recreate, environment-config, compile-all,
                   commons-jar, business-ejb-jar, integration-jar,
                   package-war"
          description="costruisce l&apos;ear">

	<!-- STDMDD-159 : tutte le librerie sono inserite a livello di WAR
    <copy todir="${temp}/${target}/${earLib}">
      <fileset dir="${lib}" includes="${ear-libs-filter} ${ear-custom-libs-filter}" />
    </copy>
    -->

    <delete file="${build}/archives/${target}/commons.jar" />
    <delete file="${build}/archives/${target}/${webapp}-integration.jar" />
    <delete file="${build}/archives/${target}/${webapp}-business.jar" />

    <ear appxml="${temp}/conf/ear/${webapp}/META-INF/application.xml"
         destfile="${build}/archives/${target}/${ear-file-name}.ear">
      <fileset dir="${build}/archives/${target}" includes="*.jar,*.war" />
      <fileset dir="${temp}/${target}">
        <include name="**/*" />
      </fileset>
      <manifest>
        <attribute name="Built-By" value="${user.name}" />
        <attribute name="Built-Date" value="${DSTAMP}" />
        <attribute name="Target" value="${target}" />
        <attribute name="Appl-Version" value="${version}" />
      </manifest>
    </ear>
  </target>
 

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [PKG]: package-war                                        # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="package-war"
          description="Genera il war per lo strato web.">
    <copy todir="${build}/classes">
      <fileset dir="${build}/temp/conf/web/${webapp}/WEB-INF"
               includes="applicationContext.xml,struts*.xml,validators.xml,*.properties,dozer*.xml,*.ttf, *.png, *.jpeg"/>
    </copy>
    <war destfile="${build}/archives/${target}/${war-file-name}.war"
         webxml="${build}/temp/conf/web/${webapp}/WEB-INF/web.xml"
         roundup="false"
         manifest="${build}/temp/conf/web/${webapp}/META-INF/MANIFEST.MF">
      <webinf dir="${build}/temp/conf/web/${webapp}/WEB-INF"
              includes="jboss-web.xml,beanContext.xml,dao-beans.xml,*.xml,*.tld,*.ttf, *.png, *.jpeg" />
      <fileset dir="${srcweb}" />
      <fileset dir="${temp}/static-resources"/>
      <classes dir="${build}/jsp" includes="**" />
      <classes dir="${build}/classes"
               includes="it/csi/${prodotto}/${componente}/presentation/**,*.xml,*.properties,template/**" />
      <lib dir="${lib}" includes="*"
            excludes="${war-exclude-libs-filter}, ${war-exclude-custom-libs-filter}, *.zip" />
      <lib dir="${build}/archives/${target}/" includes="commons.jar, ${webapp}-integration.jar, ${webapp}-business.jar" />
    </war>
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [PKG]: integration-jar                                    # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="integration-jar"
          description="Genera il jar per lo strato integration.">
    <jar jarfile="${build}/archives/${target}/${webapp}-integration.jar"
         manifest="${build}/temp/conf/jar/integration/META-INF/MANIFEST.MF">
      <fileset dir="${build}/classes">
        <include name="it/csi/${prodotto}/${componente}/integration/**" />
      </fileset>
    </jar>
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [PKG]: business-ejb-jar                                   # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="business-ejb-jar"
          description="Genera il jar per lo strato business.">
    <jar jarfile="${build}/archives/${target}/${webapp}-business.jar"
         manifest="${build}/temp/conf/ejb/business/${contesto}/META-INF/MANIFEST.MF">
      <fileset dir="${build}/classes">
        <include name="it/csi/${prodotto}/${componente}/business/**/*.*" />
      </fileset>
      <metainf dir="${build}/temp/conf/ejb/business/${contesto}/META-INF">
        <patternset id="all-xml">
          <include name="**/*.xml" />
        </patternset>
        <patternset id="all-properties">
      	    <include name="**/*.properties" />
      	</patternset>
      </metainf>
      
    </jar>
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [PKG]: commons-jar                                        # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="commons-jar" description="Genera il jar per le classi comuni.">
    <jar destfile="${build}/archives/${target}/commons.jar"
         basedir="${build}/classes"
         includes="it/csi/${prodotto}/${componente}/dto/**,
                   it/csi/${prodotto}/${componente}/exception/**,
                   it/csi/${prodotto}/${componente}/util/**">
    </jar>
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-all                                        # -->
  <!-- ############################################################# -->
  <!-- nota: non cancella la directory "dist" appositamente: v. STDMDD-495.
       per ripulire anche la "dist" richiamare esplicitamente il target "clean-dist" -->
  <!-- -->
  <target name="clean-all" description="Rimuove tutte le cartelle temporanee."
          depends="clean-archives,clean-cache,clean-classes,
                   clean-javadoc,clean-jsp,clean-temp"/>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-cache                                      # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="clean-cache"
          description="Rimuove la cartella di cache di Ivy e la lib.">
		<delete dir="${build}/cache" failonerror="no" />
		<delete dir="${lib}" failonerror="no" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-temp                                       # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="clean-temp"
          description="Rimuove la cartella dei files temporanei di build.">
    <delete dir="${temp}" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-archives                                  # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="clean-archives"
          description="Rimuove la cartella degli archivi (war, ear, ...).">
    <delete dir="${build}/archives" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-dist                                       # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="clean-dist"
          description="Rimuove la cartella delle distribuzioni.">
    <delete dir="${dist}" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-classes                                    # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="clean-classes"
          description="Rimuove la cartella dei sorgenti compilati.">
    <delete dir="${build}/classes" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-javadoc                                    # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="clean-javadoc"
          description="Rimuove la cartella temporanea dei javadoc.">
    <delete dir="${build}/javadoc" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-jsp                                        # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="clean-jsp"
          description="Rimuove la cartella temporanea delle jsp compilate.">
    <delete dir="${build}/jsp" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: _clean-web-inf                                   # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="_clean-web-inf"
          description="Rimuove il contenuto di lib e classes della
                       web application (per run locali).">
    <delete dir="${srcweb}/WEB-INF/classes" />
    <delete dir="${srcweb}/WEB-INF/lib" />
  </target>
  
  <!-- ant contrib -->
  <taskdef resource="net/sf/antcontrib/antlib.xml"/>
</project>
